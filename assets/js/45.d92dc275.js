(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{372:function(e,a,t){"use strict";t.r(a);var s=t(4),i=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("15_Semi-supervised Learning")]),e._v(" "),a("h1",{attrs:{id:"semi-supervised-learning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semi-supervised-learning"}},[e._v("#")]),e._v(" Semi-supervised Learning")]),e._v(" "),a("blockquote",[a("p",[e._v("半监督学习(semi-supervised learning) 1、introduction 2、Semi-supervised Learning for Generative Model 3、Low-density Separation Assumption：非黑即白 4、Smoothness Assumption：近朱者赤，近墨者黑 5、Better Representation：去芜存菁，化繁为简")])]),e._v(" "),a("h4",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Supervised Learning：")]),e._v(" "),a("ul",[a("li",[e._v("training data中，"),a("strong",[e._v("每一组")]),e._v("data都有input 和对应的output")])]),e._v(" "),a("p",[e._v("Semi-supervised Learning：} +")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("training data中，部分data没有标签，只有input")])]),e._v(" "),a("li",[a("p",[e._v("通常遇到的场景是，无标签的数据量远大于有标签的数据量，即"),a("strong",[e._v("U>>R")])])]),e._v(" "),a("li",[a("p",[e._v("semi-supervised learning分为以下两种情况：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Transductive Learning：unlabeled data is the testing data")]),e._v(" "),a("p",[e._v("即，把testing data当做无标签的training data使用，适用于事先已经知道testing data的情况(一些比赛的时候)")]),e._v(" "),a("p",[e._v("值得注意的是，这种方法使用的仅仅是testing data的"),a("strong",[e._v("feature")]),e._v("，而不是label，因此不会出现“直接对testing data做训练而产生cheating的效果”")])]),e._v(" "),a("li",[a("p",[e._v("Inductive Learning：unlabeled data is not the testing data")]),e._v(" "),a("p",[e._v("即，不把testing data的feature拿去给机器训练，适用于事先并不知道testing data的情况(更普遍的情况)")])])])]),e._v(" "),a("li",[a("p",[e._v("为什么要做semi-supervised learning？")]),e._v(" "),a("p",[e._v("实际上我们从来不缺data，只是缺有label的data，就像你可以拍很多照片，但它们一开始都是没有标签的")])])]),e._v(" "),a("h4",{attrs:{id:"why-semi-supervised-learning-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-semi-supervised-learning-help"}},[e._v("#")]),e._v(" Why semi-supervised learning help？")]),e._v(" "),a("p",[e._v("为什么semi-supervised learning会有效呢？")]),e._v(" "),a("p",[a("em",[e._v("The distribution of the unlabeled data tell us something.")])]),e._v(" "),a("p",[e._v("unlabeled data虽然只有input，但它的"),a("strong",[e._v("分布")]),e._v("，却可以告诉我们一些事情")]),e._v(" "),a("p",[e._v("以下图为例，在只有labeled data的情况下，红线是二元分类的分界线")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-bZLEfzRr-1655563648512)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/semi-help1.png)]")]),e._v(" "),a("p",[e._v("但当我们加入unlabeled data的时候，由于"),a("strong",[e._v("特征分布")]),e._v("发生了变化，分界线也随之改变")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-QOJfGhqp-1655563648513)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/semi-help2.png)]")]),e._v(" "),a("p",[e._v("semi-supervised learning的使用往往伴随着假设，而该假设的合理与否，决定了结果的好坏程度；比如上图中的unlabeled data，它显然是一只狗，而特征分布却与猫被划分在了一起，很可能是由于这两张图片的背景都是绿色导致的，因此假设是否合理显得至关重要")]),e._v(" "),a("h4",{attrs:{id:"semi-supervised-learning-for-generative-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semi-supervised-learning-for-generative-model"}},[e._v("#")]),e._v(" Semi-supervised Learning for Generative Model")]),e._v(" "),a("h5",{attrs:{id:"supervised-generative-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supervised-generative-model"}},[e._v("#")]),e._v(" Supervised Generative Model")]),e._v(" "),a("p",[e._v("事实上，在监督学习中，我们已经讨论过概率生成模型了，假设class1和class2的分布分别为、的高斯分布，计算出Prior Probability后，再根据贝叶斯公式可以推得新生成的x所属的类别")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ABIriCBu-1655563648513)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/super-gm.png)]")]),e._v(" "),a("h5",{attrs:{id:"semi-supervised-generative-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semi-supervised-generative-model"}},[e._v("#")]),e._v(" Semi-supervised Generative Model")]),e._v(" "),a("p",[e._v('如果在原先的数据下多了unlabeled data(下图中绿色的点)，它就会影响最终的决定，你会发现原先的显然是不合理的，新的需要使得样本点的分布更接近下图虚线圆所标出的范围，除此之外，右侧的Prior Probability会给人一种比左侧大的感觉(右侧样本点"变多"了)')]),e._v(" "),a("p",[e._v("此时，unlabeled data对都产生了一定程度的影响，划分两个class的decision boundary也会随之发生变化")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xzwkD0y8-1655563648513)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/super-semi.png)]")]),e._v(" "),a("p",[e._v("讲完了直观上的解释，接下来进行具体推导(假设做二元分类)：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("先随机初始化一组参数：")])]),e._v(" "),a("li",[a("p",[e._v("step1：利用初始model计算每一笔unlabeled data 属于class 1的概率")])]),e._v(" "),a("li",[a("p",[e._v("step2：update model")]),e._v(" "),a("p",[e._v("如果不考虑unlabeled data，则先验概率显然为属于class1的样本点数/总的样本点数，即")]),e._v(" "),a("p",[e._v("而考虑unlabeled data时，分子还要加上所有unlabeled data属于class 1的概率和，此时它们被看作小数，可以理解为按照概率一部分属于，一部分属于")]),e._v(" "),a("p",[e._v("同理，对于均值，原先的mean 加上根据概率对求和再归一化的结果即可")]),e._v(" "),a("p",[e._v("剩余的参数同理，接下来就有了一组新的参数，于是回到step1->step2->step1循环")])]),e._v(" "),a("li",[a("p",[e._v("理论上该方法保证是可以收敛的，而一开始给的初始值会影响收敛的结果，类似gradient descent")])]),e._v(" "),a("li",[a("p",[e._v("上述的step1就是EM algorithm里的E，step2则是M")])])]),e._v(" "),a("p",[e._v("以上的推导基于的基本思想是，把unlabeled data 看成是可以划分的，一部分属于，一部分属于，此时它的概率，也就是的先验概率乘上这个class产生的概率+的先验概率乘上这个class产生的概率")]),e._v(" "),a("p",[e._v("实际上我们在利用极大似然函数更新参数的时候，就利用了该拆分的结果：")]),e._v(" "),a("h4",{attrs:{id:"low-density-separation-assumption"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#low-density-separation-assumption"}},[e._v("#")]),e._v(" Low-density Separation Assumption")]),e._v(" "),a("p",[e._v("接下来介绍一种新的方法，它基于的假设是Low-density separation")]),e._v(" "),a("p",[e._v("通俗来讲，就是这个世界是非黑即白的，在两个class的交界处data的密度(density)是很低的，它们之间会有一道明显的鸿沟，此时unlabeled data(下图绿色的点)就是帮助你在原本正确的基础上挑一条更好的boundary")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-mqVcnJ9H-1655563648514)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/bw.png)]")]),e._v(" "),a("h5",{attrs:{id:"self-training"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#self-training"}},[e._v("#")]),e._v(" Self Training")]),e._v(" "),a("p",[e._v("low-density separation最具代表性也最简单的方法是"),a("strong",[e._v("self training")])]),e._v(" "),a("ul",[a("li",[e._v("先从labeled data去训练一个model ，训练方式没有限制")]),e._v(" "),a("li",[e._v("然后用该去对unlabeled data打上label，，也叫作pseudo label")]),e._v(" "),a("li",[e._v("从unlabeled data中拿出一些data加到labeled data里，至于data的选取需要你自己设计算法来挑选")]),e._v(" "),a("li",[e._v("回头再去训练，循环即可")])]),e._v(" "),a("p",[e._v("注：该方法对Regression是不适用的")]),e._v(" "),a("p",[e._v("实际上，该方法与之前提到的generative model还是挺像的，区别在于：")]),e._v(" "),a("ul",[a("li",[e._v("Self Training使用的是hard label：假设一笔data强制属于某个class")]),e._v(" "),a("li",[e._v("Generative Model使用的是soft label：假设一笔data可以按照概率划分，不同部分属于不同class")])]),e._v(" "),a("p",[e._v("如果我们使用的是neural network的做法，是从labeled data中得到的一组参数，此时丢进来一个unlabeled data ，通过后得到，即它有0.7的概率属于class 1，0.3的概率属于class 2")]),e._v(" "),a("ul",[a("li",[e._v("如果此时使用hard label，则的label被转化成")]),e._v(" "),a("li",[e._v("如果此时使用soft label，则的label依旧是")])]),e._v(" "),a("p",[e._v("可以看到，在neural network里使用soft label是没有用的，因为把原始的model里的某个点丢回去重新训练，得到的依旧是同一组参数，实际上low density separation就是通过强制分类来提升分类效果的方法")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-gT8P1rqJ-1655563648514)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/self-training.png)]")]),e._v(" "),a("h5",{attrs:{id:"entropy-based-regularization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entropy-based-regularization"}},[e._v("#")]),e._v(" Entropy-based Regularization")]),e._v(" "),a("p",[e._v("该方法是low-density separation的进阶版，你可能会觉得hard label这种直接强制性打标签的方式有些太武断了，而entropy-based regularization则做了相应的改进：，其中是一个"),a("strong",[e._v("概率分布(distribution)")])]),e._v(" "),a("p",[e._v("由于我们不知道unlabeled data 的label到底是什么，但如果通过entropy-based regularization得到的分布集中在某个class上的话，那这个model就是好的，而如果分布是比较分散的，那这个model就是不好的，如下图所示：")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-tNxv2URX-1655563648514)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/entropy.png)]")]),e._v(" "),a("p",[e._v("接下来的问题是，如何用数值的方法来evaluate distribution的集中(好坏)与否，要用到的方法叫entropy，一个distribution的entropy可以告诉你它的集中程度：")]),e._v(" "),a("p",[e._v("对上图中的第1、2种情况，算出的，而第3种情况，算出的，可见entropy越大，distribution就越分散，entropy越小，distribution就越集中")]),e._v(" "),a("p",[e._v("因此我们的目标是在labeled data上分类要正确，在unlabeled data上，output的entropy要越小越好，此时就要修改loss function")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("对labeled data来说，它的output要跟正确的label越接近越好，用cross entropy表示如下：")])]),e._v(" "),a("li",[a("p",[e._v("对unlabeled data来说，要使得该distribution(也就是output)的entropy越小越好：")])]),e._v(" "),a("li",[a("p",[e._v("两项综合起来，可以用weight来加权，以决定哪个部分更为重要一些")]),e._v(" "),a("p",[e._v("可以发现该式长得很像regularization，这也就是entropy regularization的名称由来")])])]),e._v(" "),a("h5",{attrs:{id:"semi-supervised-svm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semi-supervised-svm"}},[e._v("#")]),e._v(" Semi-supervised SVM")]),e._v(" "),a("p",[e._v("SVM要做的是，给你两个class的data，去找一个boundary：")]),e._v(" "),a("ul",[a("li",[e._v("要有最大的margin，让这两个class分的越开越好")]),e._v(" "),a("li",[e._v("要有最小的分类错误")])]),e._v(" "),a("p",[e._v("对unlabeled data穷举所有可能的label，下图中列举了三种可能的情况；然后对每一种可能的结果都去算SVM，再找出可以让margin最大，同时又minimize error的那种情况，下图中是用黑色方框标注的情况")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-LCworTek-1655563648515)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/semi-svm.png)]")]),e._v(" "),a("p",[e._v("SVM paper：Thorsten Joachims, ”"),a("em",[e._v("Transductive")]),e._v(" "),a("em",[e._v("Inference for Text Classification using Support Vector Machines”,")]),e._v(" ICML, 1999")]),e._v(" "),a("p",[e._v("当然这么做会存在一个问题，对于n笔unlabeled data，意味着即使在二元分类里也有种可能的情况，数据量大的时候，几乎难以穷举完毕，上面给出的paper提出了一种approximate的方法，基本精神是：一开始你先得到一些label，然后每次改一笔unlabeled data的label，看看可不可以让你的objective function变大，如果变大就去改变该label，具体内容详见paper")]),e._v(" "),a("h4",{attrs:{id:"smoothness-assumption"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smoothness-assumption"}},[e._v("#")]),e._v(" Smoothness Assumption")]),e._v(" "),a("h5",{attrs:{id:"concepts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[e._v("#")]),e._v(" concepts")]),e._v(" "),a("p",[e._v("smoothness assumption的基本精神是：近朱者赤，近墨者黑")]),e._v(" "),a("p",[e._v("粗糙的定义是相似的x具有相同的，精确的定义是：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("x的分布是不平均的")])]),e._v(" "),a("li",[a("p",[e._v("如果和在一个high density region上很接近的话，那么和就是相同的")]),e._v(" "),a("p",[e._v("也就是这两个点可以在样本点高密度集中分布的区域块中有一条可连接的路径，即 connected by a high density path")])])]),e._v(" "),a("p",[e._v("假设下图是data的分布，是其中的三笔data，如果单纯地看x的相似度，显然和更接近一些，但对于smoothness assumption来说，和是处于同一块区域的，它们之间可以有一条相连的路径；而与之间则是“断开”的，没有high density path，因此与更“像”")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-pATrAejb-1655563648515)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/smooth.png)]")]),e._v(" "),a("h5",{attrs:{id:"digits-detection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#digits-detection"}},[e._v("#")]),e._v(" digits detection")]),e._v(" "),a("p",[e._v("以手写数字识别为例，对于最右侧的2和3以及最左侧的2，显然最右侧的2和3在pixel上相似度更高一些；但如果把所有连续变化的2都放进来，就会产生一种“不直接相连的相似”，根据Smoothness Assumption的理论，由于2之间有连续过渡的形态，因此第一个2和最后一个2是比较像的，而最右侧2和3之间由于没有过渡的data，因此它们是比较不像的")]),e._v(" "),a("p",[e._v("人脸的过渡数据也同理")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-drfUsvMl-1655563648516)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/smooth2.png)]")]),e._v(" "),a("h5",{attrs:{id:"file-classification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-classification"}},[e._v("#")]),e._v(" file classification")]),e._v(" "),a("p",[e._v("Smoothness Assumption在文件分类上是非常有用的")]),e._v(" "),a("p",[e._v("假设对天文学(astronomy)和旅行(travel)的文章进行分类，它们各自有专属的词汇，此时如果unlabeled data与label data的词汇是相同或重合(overlap)的，那么就很容易分类；但在真实的情况下，unlabeled data和labeled data之间可能没有任何重复的words，因为世界上的词汇太多了，sparse的分布很难会使overlap发生")]),e._v(" "),a("p",[e._v("但如果unlabeled data足够多，就会以一种相似传递的形式，建立起文档之间相似的桥梁")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ef6Pr4hq-1655563648516)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/overlap.png)]")]),e._v(" "),a("h5",{attrs:{id:"cluster-and-then-label"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cluster-and-then-label"}},[e._v("#")]),e._v(" cluster and then label")]),e._v(" "),a("p",[e._v("在具体实现上，有一种简单的方法是cluster and then label，也就是先把data分成几个cluster，划分class之后再拿去训练，但这种方法不一定会得到好的结果，因为它的假设是你可以把同一个class的样本点cluster在一起，而这其实是没那么容易的")]),e._v(" "),a("p",[e._v("对图像分类来说，如果单纯用pixel的相似度来划分cluster，得到的结果一般都会很差，你需要设计一个很好的方法来描述image(类似Deep Autoencoder的方式来提取feature)，这样cluster才会有效果")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-YgIpjfK3-1655563648516)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/cluster.png)]")]),e._v(" "),a("h5",{attrs:{id:"graph-based-approach"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graph-based-approach"}},[e._v("#")]),e._v(" Graph-based Approach")]),e._v(" "),a("p",[e._v("之前讲的是比较直觉的做法，接下来引入Graph Structure来表达connected by a high density path这件事")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-O4jFcMql-1655563648517)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/graph.png)]")]),e._v(" "),a("p",[e._v("我们把所有的data points都建成一个graph，有时候建立vertex之间的关系是比较容易的，比如网页之间的链接关系、论文之间的引用关系；但有时候需要你自己去寻找vertex之间的关系")]),e._v(" "),a("p",[e._v("graph的好坏，对结果起着至关重要的影响，而如何build graph却是一件heuristic的事情，需要凭着经验和直觉来做")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("首先定义两个object 之间的相似度")]),e._v(" "),a("p",[e._v("如果是基于pixel的相似度，performance可能会不太好；建议使用autoencoder提取出来的feature来计算相似度，得到的performance会好一些")])]),e._v(" "),a("li",[a("p",[e._v("算完相似度后，就可以建graph了，方式有很多种：")]),e._v(" "),a("ul",[a("li",[e._v("k nearest neighbor：假设k=3，则每个point与相似度最接近的3个点相连")]),e._v(" "),a("li",[e._v("e-neighborhood：每个point与相似度超过某个特定threshold e的点相连")])])]),e._v(" "),a("li",[a("p",[e._v("除此之外，还可以给Edge特定的weight，让它与相似度成正比")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("建议用RBM function来确定相似度：")]),e._v(" "),a("p",[e._v("这里均为vector，计算它们的Euclidean Distance(欧几里得距离)，加上参数后再去exponential")])]),e._v(" "),a("li",[a("p",[e._v("至于加exponential，经验上来说通常是可以帮助提升performance的，在这里只有当非常接近的时候，singularity才会大；只要距离稍微远一点，singularity就会下降得很快，变得很小")])]),e._v(" "),a("li",[a("p",[e._v("使用exponential的RBM function可以做到只有非常近的两个点才能相连，稍微远一点就无法相连的效果，避免了下图中跨区域相连的情况")])])])])]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Rbn9Jrb0-1655563648517)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/build-graph.png)]")]),e._v(" "),a("p",[e._v("graph-based approach的基本精神是，在graph上已经有一些labeled data，那么跟它们相连的point，属于同一类的概率就会上升，每一笔data都会去影响它的邻居，而graph带来的最重要的好处是，这个影响是会随着edges"),a("strong",[e._v("传递")]),e._v("出去的，即使有些点并没有真的跟labeled data相连，也可以被传递到相应的属性")]),e._v(" "),a("p",[e._v("比如下图中，如果graph建的足够好，那么两个被分别label为蓝色和红色的点就可以传递完两张完整的图；从中我们也可以看出，如果想要让这种方法生效，收集到的data一定要足够多，否则可能传递到一半，graph就断掉了，information的传递就失效了")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-sCciU4Qg-1655563648517)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/graph-nei.png)]")]),e._v(" "),a("p",[e._v("介绍完了如何定性使用graph，接下来介绍一下如何定量使用graph")]),e._v(" "),a("p",[e._v("定量的使用方式是定义label的smoothness，下图中，edge上的数字是weight，表达data，表示data的label，计算smoothness的方式为：")]),e._v(" "),a("p",[a("strong",[e._v("我们期望smooth的值越小越好")])]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-MHx8kN6Q-1655563648518)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/graph-cal.png)]")]),e._v(" "),a("p",[e._v("当然上面的式子还可以化简，如果把labeled data和unlabeled data的y组成一个(R+U)-dim vector，即")]),e._v(" "),a("p",[e._v("于是smooth可以改写为：")]),e._v(" "),a("p",[e._v("其中L为(R+U)×(R+U) matrix，成为"),a("strong",[e._v("Graph Laplacian")]),e._v("， 定义为")]),e._v(" "),a("ul",[a("li",[e._v("W：把data point两两之间weight的关系建成matrix，代表了与之间的weight值")]),e._v(" "),a("li",[e._v("D：把W的每一个row上的值加起来放在该行对应的diagonal上即可，比如5=2+3,3=2+1,...")])]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-8H2KoN3t-1655563648518)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/graph-cal2.png)]")]),e._v(" "),a("p",[e._v("对来说，y是label，是neural network的output，取决于neural network的parameters，因此要在原来仅针对labeled data的loss function中加上这一项，得到：")]),e._v(" "),a("p",[e._v("实际上也是一个regularization term")]),e._v(" "),a("p",[e._v("训练目标：")]),e._v(" "),a("ul",[a("li",[e._v("labeled data的cross entropy越小越好(neural network的output跟真正的label越接近越好)")]),e._v(" "),a("li",[e._v("smooth S越小越好(neural network的output，不管是labeled还是unlabeled，都要符合Smoothness Assumption的假设)")])]),e._v(" "),a("p",[e._v("具体训练的时候，不一定只局限于neural network的output要smooth，可以对中间任意一个hidden layer加上smooth的限制")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-LsLteOgW-1655563648518)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/graph-cal3.png)]")]),e._v(" "),a("h4",{attrs:{id:"better-representation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#better-representation"}},[e._v("#")]),e._v(" Better Representation")]),e._v(" "),a("p",[e._v("Better Representation的精神是，去芜存菁，化繁为简")]),e._v(" "),a("p",[e._v("我们观察到的世界是比较复杂的，而在它的背后其实是有一些比较简单的东西，在操控着这个复杂的世界，所以只要你能够看透这个世界的假象，直指它的核心的话，就可以让training变得比较容易")]),e._v(" "),a("p",[e._v("举一个例子，在神雕侠侣中，杨过要在三招之内剪掉樊一翁的胡子，虽然胡子的变化是比较复杂的，但头的变化是有限的，杨过看透了这一件事情就可以把胡子剪掉。在这个例子中，樊一翁的胡子就是original representation，而他的头就是你要找的better representation")]),e._v(" "),a("p",[e._v("[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-oPV3fu7I-1655563648518)(https://gitee.com/Sakura-gh/ML-notes/raw/master/img/better-re.png)]")]),e._v(" "),a("p",[e._v("算法具体思路和内容到unsupervised learning的时候再介绍")])])}),[],!1,null,null,null);a.default=i.exports}}]);